if (hipoteza >= obszar_krytyczny_lewostronny && hipoteza <= obszar_krytyczny_prawostronny) {
print("Nie mozna odrzucic hipotezy - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
} else {
print("Mozna odrzucic hipoteze - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
}
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
ilosc_elementow <- length(dwojka)
hipoteza <- 20
poziom_istotnosci <- 0.05
print("Hipoteza: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
print("Hipoteza alternatywa: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” jest rozne od 20 tys. zl")
statystyka_testowa <- function(ilosc_el, hipoteza_zerowa) {
stat = (ilosc_el*var(dwojka))/(hipoteza_zerowa^2)
return(stat)
}
test <- statystyka_testowa(ilosc_elementow, hipoteza)
print(paste("Statystyka testowa: ", test))
obszar_krytyczny_lewostronny <- qchisq(poziom_istotnosci/2, ilosc_elementow - 1)
obszar_krytyczny_prawostronny <- qchisq(1 - poziom_istotnosci/2, ilosc_elementow - 1)
print("Obszar krytyczny dwustronny: ")
print(paste("(0; ", obszar_krytyczny_lewostronny,"> u <", obszar_krytyczny_prawostronny, "; oo)"))
if (hipoteza >= obszar_krytyczny_lewostronny && hipoteza <= obszar_krytyczny_prawostronny) {
print("Nie mozna odrzucic hipotezy - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
} else {
print("Mozna odrzucic hipoteze - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
}
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
ilosc_elementow <- length(dwojka)
hipoteza <- 20
poziom_istotnosci <- 0.05
print("Hipoteza: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
print("Hipoteza alternatywa: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” jest rozne od 20 tys. zl")
statystyka_testowa <- function(ilosc_el, hipoteza_zerowa) {
stat = (ilosc_el*var(dwojka))/(hipoteza_zerowa^2)
return(stat)
}
test <- statystyka_testowa(ilosc_elementow, hipoteza)
print(paste("Statystyka testowa: ", test))
print(paste("L: ",poziom_istotnosci/2, ilosc_elementow - 1))
print(paste("L: ",1 - poziom_istotnosci/2, ilosc_elementow - 1))
obszar_krytyczny_lewostronny <- qchisq(poziom_istotnosci/2, ilosc_elementow - 1)
obszar_krytyczny_prawostronny <- qchisq(1 - poziom_istotnosci/2, ilosc_elementow - 1)
print("Obszar krytyczny dwustronny: ")
print(paste("(0; ", obszar_krytyczny_lewostronny,"> u <", obszar_krytyczny_prawostronny, "; oo)"))
if (hipoteza >= obszar_krytyczny_lewostronny && hipoteza <= obszar_krytyczny_prawostronny) {
print("Nie mozna odrzucic hipotezy - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
} else {
print("Mozna odrzucic hipoteze - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
}
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
ilosc_elementow <- length(dwojka)
hipoteza <- 20
poziom_istotnosci <- 0.05
print("Hipoteza: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
print("Hipoteza alternatywa: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” jest rozne od 20 tys. zl")
statystyka_testowa <- function(ilosc_el, hipoteza_zerowa) {
stat = (ilosc_el*var(dwojka))/(hipoteza_zerowa^2)
return(stat)
}
test <- statystyka_testowa(ilosc_elementow, hipoteza)
print(paste("Statystyka testowa: ", test))
#print(paste("L: ",poziom_istotnosci/2, ilosc_elementow - 1))
#print(paste("P: ",1 - poziom_istotnosci/2, ilosc_elementow - 1))
obszar_krytyczny_lewostronny <- qchisq(poziom_istotnosci/2, ilosc_elementow - 1)
obszar_krytyczny_prawostronny <- qchisq(1 - poziom_istotnosci/2, ilosc_elementow - 1)
print("Obszar krytyczny dwustronny: ")
print(paste("(0; ", obszar_krytyczny_lewostronny,"> u <", obszar_krytyczny_prawostronny, "; oo)"))
if (hipoteza >= obszar_krytyczny_lewostronny && hipoteza <= obszar_krytyczny_prawostronny) {
print("Nie mozna odrzucic hipotezy - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
} else {
print("Mozna odrzucic hipoteze - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
}
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
+ if(nchar(pkg)) library(pkg, character.only=TRUE)})
jedynka = c(242.8, 245.4, 252.5, 254.8, 215.9, 229.9, 285.5, 268.8, 245.4, 243.3, 185.6, 265.8, 248.1, 245, 232.8, 260.1, 264.5, 247.2, 239.7, 228.4, 251.9, 221.3, 252.9, 190.8, 300.1, 264.5, 257.8, 248.6, 234.9, 260.5, 225.1)
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
mean(jedynka) # œrednia
mean(dwojka) # œrednia
quantile(jedynka) # kwantyle
quantile(jedynka) # kwantyle
var(jedynka) # wariancja
var(dwojka) # wariancja
sd(jedynka) # odchylenie standardowe
sd(dwojka) # odchylenie standardowe
sd(jedynka)/mean(jedynka) # wspó³czynnik zmiennoœci
sd(dwojka)/mean(dwojka) # wspó³czynnik zmiennoœci
skewness(jedynka) # skoœnoœæ
skewness(dwojka) # skoœnoœæ
kurtosis(jedynka) # kurtoza
kurtosis(dwojka) # kurtoza
dlj = length(jedynka) # ilosc danych jedynka
tab1=cut(jedynka,c(130,170,210,250,310)) # utworzenie szeregu rozdzielczego dla sklepu jedynka
table(tab1)
dld = length(dwojka) # ilosc danych dwojka
tab2=cut(dwojka,c(130,170,210,250,310)) # utworzenie szeregu rozdzielczego dla sklepu dwojka
table(tab2)
barplot(table(tab1,tab2), beside=T) # wyswietlenie szeregu sklep dwojka
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
ilosc_elementow <- length(dwojka)
hipoteza <- 20
poziom_istotnosci <- 0.05
print("Hipoteza: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
print("Hipoteza alternatywa: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” jest rozne od 20 tys. zl")
statystyka_testowa <- function(ilosc_el, hipoteza_zerowa) {
stat = (ilosc_el*var(dwojka))/(hipoteza_zerowa^2)
return(stat)
}
test <- statystyka_testowa(ilosc_elementow, hipoteza)
print(paste("Statystyka testowa: ", test))
obszar_krytyczny_lewostronny <- qchisq(poziom_istotnosci/2, ilosc_elementow - 1)
obszar_krytyczny_prawostronny <- qchisq(1 - poziom_istotnosci/2, ilosc_elementow - 1)
print("Obszar krytyczny dwustronny: ")
print(paste("(0; ", obszar_krytyczny_lewostronny,"> u <", obszar_krytyczny_prawostronny, "; oo)"))
if (hipoteza >= obszar_krytyczny_lewostronny && hipoteza <= obszar_krytyczny_prawostronny) {
print("Nie mozna odrzucic hipotezy - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
} else {
print("Mozna odrzucic hipoteze - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
}
jedynka = c(242.8, 245.4, 252.5, 254.8, 215.9, 229.9, 285.5, 268.8, 245.4, 243.3, 185.6, 265.8, 248.1, 245, 232.8, 260.1, 264.5, 247.2, 239.7, 228.4, 251.9, 221.3, 252.9, 190.8, 300.1, 264.5, 257.8, 248.6, 234.9, 260.5, 225.1)
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
zad2test <- function(dane)  {
dane = sort(dane) # sortowanie danych
n = length(dane) # obliczanie, ile element?w
# przyjmowanie odpowiedniego k, w zale?no?ci od liczby element?w, brane z tablicy
k = 0.1591
p = pnorm((dane - mean(dane))/sd(dane))
# pnorm - The Normal Distribution ? rozk?ad normalny
# mean - Arithmetic Mean ? ?rednia arytmetyczna
# sd - Standard Deviation ? odchylenie standardowe
# seq - Sequence Generation
Dplus = max(seq(1:n)/n - p)
Dminus = max(p - (seq(1:n) - 1)/n)
d = max(Dplus, Dminus)
if (d < k) { cat("Wydatki na jedna osobe na pieczywo i produkty zbozowe maja rozklad normalny.\n") }
else { cat("Wydatki na jedna osobe na pieczywo i produkty zbozowe nie maja rozkladu normalnego.\n") }
}
print(paste(zad2test(jedynka)))
jedynka = c(242.8, 245.4, 252.5, 254.8, 215.9, 229.9, 285.5, 268.8, 245.4, 243.3, 185.6, 265.8, 248.1, 245, 232.8, 260.1, 264.5, 247.2, 239.7, 228.4, 251.9, 221.3, 252.9, 190.8, 300.1, 264.5, 257.8, 248.6, 234.9, 260.5, 225.1)
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
zad2test <- function(dane)  {
dane = sort(dane) # sortowanie danych
n = length(dane) # obliczanie, ile element?w
# przyjmowanie odpowiedniego k, w zale?no?ci od liczby element?w, brane z tablicy
k = 0.1591
p = pnorm((dane - mean(dane))/sd(dane))
# pnorm - The Normal Distribution ? rozk?ad normalny
# mean - Arithmetic Mean ? ?rednia arytmetyczna
# sd - Standard Deviation ? odchylenie standardowe
# seq - Sequence Generation
Dplus = max(seq(1:n)/n - p)
Dminus = max(p - (seq(1:n) - 1)/n)
d = max(Dplus, Dminus)
if (d < k) { cat("Obroty w każdym sklepie mają rozkład normalny.\n") }
else { cat("Obroty w każdym sklepie nie mają rozkładu normalnego.\n") }
}
print(paste("Jedynka: ", zad2test(jedynka)))
print(paste("Dwojka: ", zad2test(dwojka)))
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
ilosc_elementow <- length(dwojka)
hipoteza <- 20
poziom_istotnosci <- 0.05
print("Hipoteza: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
print("Hipoteza alternatywa: odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” jest rozne od 20 tys. zl")
statystyka_testowa <- function(ilosc_el, hipoteza_zerowa) {
stat = (ilosc_el*var(dwojka))/(hipoteza_zerowa^2)
return(stat)
}
test <- statystyka_testowa(ilosc_elementow, hipoteza)
print(paste("Statystyka testowa: ", test))
#obliczenie obszaru krytycznego dwustronnego
obszar_krytyczny_lewostronny <- qchisq(poziom_istotnosci/2, ilosc_elementow - 1)
obszar_krytyczny_prawostronny <- qchisq(1 - poziom_istotnosci/2, ilosc_elementow - 1)
print("Obszar krytyczny dwustronny: ")
print(paste("(0; ", obszar_krytyczny_lewostronny,"> u <", obszar_krytyczny_prawostronny, "; oo)"))
if (hipoteza >= obszar_krytyczny_lewostronny && hipoteza <= obszar_krytyczny_prawostronny) {
print("Nie mozna odrzucic hipotezy - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
} else {
print("Mozna odrzucic hipoteze - odchylenie standardowe obrotow uzyskanych przez sklep „Dwojka” wynosi 20 tys. zl")
}
jedynka = c(242.8, 245.4, 252.5, 254.8, 215.9, 229.9, 285.5, 268.8, 245.4, 243.3, 185.6, 265.8, 248.1, 245, 232.8, 260.1, 264.5, 247.2, 239.7, 228.4, 251.9, 221.3, 252.9, 190.8, 300.1, 264.5, 257.8, 248.6, 234.9, 260.5, 225.1)
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
zad2test <- function(dane)  {
dane = sort(dane) # sortowanie danych
n = length(dane) # obliczanie, ile element?w
# przyjmowanie odpowiedniego k, w zale?no?ci od liczby element?w, brane z tablicy
k = 0.1591
p = pnorm((dane - mean(dane))/sd(dane))
# pnorm - The Normal Distribution ? rozk?ad normalny
# mean - Arithmetic Mean ? ?rednia arytmetyczna
# sd - Standard Deviation ? odchylenie standardowe
# seq - Sequence Generation
Dplus = max(seq(1:n)/n - p)
Dminus = max(p - (seq(1:n) - 1)/n)
d = max(Dplus, Dminus)
if (d < k) { cat("Obroty w każdym sklepie mają rozkład normalny.\n") }
else { cat("Obroty w każdym sklepie nie mają rozkładu normalnego.\n") }
}
print(paste("Jedynka: ", zad2test(jedynka)))
print(paste("Dwojka: ", zad2test(dwojka)))
jedynka = c(242.8, 245.4, 252.5, 254.8, 215.9, 229.9, 285.5, 268.8, 245.4, 243.3, 185.6, 265.8, 248.1, 245, 232.8, 260.1, 264.5, 247.2, 239.7, 228.4, 251.9, 221.3, 252.9, 190.8, 300.1, 264.5, 257.8, 248.6, 234.9, 260.5, 225.1)
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
zad2test <- function(dane)  {
dane = sort(dane) # sortowanie danych
n = length(dane) # obliczanie, ile element?w
# przyjmowanie odpowiedniego k, w zale?no?ci od liczby element?w, brane z tablicy
k = 0.1591
p = pnorm((dane - mean(dane))/sd(dane))
# pnorm - The Normal Distribution ? rozk?ad normalny
# mean - Arithmetic Mean ? ?rednia arytmetyczna
# sd - Standard Deviation ? odchylenie standardowe
# seq - Sequence Generation
Dplus = max(seq(1:n)/n - p)
Dminus = max(p - (seq(1:n) - 1)/n)
d = max(Dplus, Dminus)
if (d < k) { print("Obroty w każdym sklepie mają rozkład normalny.\n") }
else { print("Obroty w każdym sklepie nie mają rozkładu normalnego.\n") }
}
print(paste("Jedynka: ", zad2test(jedynka)))
print(paste("Dwojka: ", zad2test(dwojka)))
jedynka = c(242.8, 245.4, 252.5, 254.8, 215.9, 229.9, 285.5, 268.8, 245.4, 243.3, 185.6, 265.8, 248.1, 245, 232.8, 260.1, 264.5, 247.2, 239.7, 228.4, 251.9, 221.3, 252.9, 190.8, 300.1, 264.5, 257.8, 248.6, 234.9, 260.5, 225.1)
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
zad2test <- function(dane)  {
dane = sort(dane) # sortowanie danych
n = length(dane) # obliczanie, ile element?w
# przyjmowanie odpowiedniego k, w zaleznosci od liczby elementow, brane z tablicy
k = 0.1591
p = pnorm((dane - mean(dane))/sd(dane))
# pnorm - rozklad normalny
# mean - srednia arytmetyczna
# sd - odchylenie standardowe
# seq - Sequence Generation
Dplus = max(seq(1:n)/n - p)
Dminus = max(p - (seq(1:n) - 1)/n)
d = max(Dplus, Dminus)
print(paste("k: ", k))
print(paste("d: ", d))
if (d < k) { print("Obroty w sklepie mają rozkład normalny.\n") }
else { print("Obroty w sklepie nie mają rozkładu normalnego.\n") }
}
print("Jedynka:")
print(paste(zad2test(jedynka)))
Print("Dwojka: ")
print(paste(zad2test(dwojka)))
jedynka = c(242.8, 245.4, 252.5, 254.8, 215.9, 229.9, 285.5, 268.8, 245.4, 243.3, 185.6, 265.8, 248.1, 245, 232.8, 260.1, 264.5, 247.2, 239.7, 228.4, 251.9, 221.3, 252.9, 190.8, 300.1, 264.5, 257.8, 248.6, 234.9, 260.5, 225.1)
dwojka = c(177.7, 202.1, 230.2, 220.6, 194.2, 227.6, 189.6, 204.9, 185.3, 218.7, 139.5, 170.4, 195.4, 210.6, 190.9, 208.1, 200.8, 153.2, 195.5, 172.2, 209.2, 221.9, 190.1, 211.4, 191.5, 184.9, 180.6, 222.2, 198.6, 202.6, 215.5)
zad2test <- function(dane)  {
dane = sort(dane) # sortowanie danych
n = length(dane) # obliczanie, ile element?w
# przyjmowanie odpowiedniego k, w zaleznosci od liczby elementow, brane z tablicy
k = 0.1591
p = pnorm((dane - mean(dane))/sd(dane))
# pnorm - rozklad normalny
# mean - srednia arytmetyczna
# sd - odchylenie standardowe
# seq - Sequence Generation
Dplus = max(seq(1:n)/n - p)
Dminus = max(p - (seq(1:n) - 1)/n)
d = max(Dplus, Dminus)
print(paste("k: ", k))
print(paste("d: ", d))
if (d < k) { print("Obroty w sklepie mają rozkład normalny.") }
else { print("Obroty w sklepie nie mają rozkładu normalnego.") }
}
print("Jedynka:")
print(paste(zad2test(jedynka)))
print("Dwojka: ")
print(paste(zad2test(dwojka)))
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
cat("k: ", k, "\n")
cat("k: ", k)
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
print(paste(zad2test(dwojka)))
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad4.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad2.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad5.r")
cat(test)
source("~/ProjMS/zad5.r")
clear
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad4.r")
source("~/ProjMS/zad4.r")
source("~/ProjMS/zad4.r")
source("~/ProjMS/zad4.r")
source("~/ProjMS/zad4.r")
source("~/ProjMS/zad5.r")
source("~/ProjMS/zad2.r")
